name: Scala build and test
on: [push, pull_request]

jobs:
  # Label of the container job
  sbt-build-test:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: mozilla/sbt

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Compile
        run: sbt compile

      - name: Test & package
        run: sbt coverage test coverageReport

      - name: Package
        run: sbt assembly

      - name: Rename the package
        run: mv $(find target -name nro-delegated-stats.jar) .

      - name: Upload jar
        uses: actions/upload-artifact@v2
        with:
          name: nro-delegated-stats-jar
          path: ./nro-delegated-stats.jar

      - name: Upload reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: |
            target/scoverage-report/**/*
            target/test-reports/**/*

  docker:
    runs-on: ubuntu-latest
    needs: sbt-build-test
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - name: checkout sources
        uses: actions/checkout@v2

      - name: Fetch jar
        uses: actions/download-artifact@v2
        with:
          name: nro-delegated-stats-jar

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build_publication_server
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ripencc/nro-delegated-stats:latest
          labels: "org.label-schema.vcs-ref=${{ github.sha }}"

      - name: Image digest
        run: echo ${{ steps.docker_build_publication_server.outputs.digest }}